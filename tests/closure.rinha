// outer closure from inside
let outer = fn () => {
  let x = "outside";
  let inner = fn () => {
    print x;
  };
  inner();
};
outer();

// outer closure from outside
let f = fn () => {
  let x = 1;
  fn () => {
    x
  }
};
let g = f();
print(g())

// local recursive function
let f = fn () => {
  let rec = fn () => {
    if (true) {
      1
    } else {
      rec();
    }
  };
  rec
};
let g = f();
print(g())